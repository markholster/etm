ext {
    version_artemis = "2.7.0"
    version_citrus = "2.8.0"
    version_elasticsearch_major = "7.0"
    version_elasticsearch = version_elasticsearch_major + ".0"
    version_jaxb = "2.3.1"
    version_junit = "5.4.0"
    version_ldaptive = "1.2.4"
    version_log4j = "2.11.2"
    version_resteasy = "3.6.3.Final"
    version_slf4j = "1.7.29"

    dep_apacheDs = "org.apache.directory.server:apacheds-all:2.0.0-M24"
    dep_artemisJmsClient = "org.apache.activemq:artemis-jms-client:" + version_artemis
    dep_artemisJmsServer = "org.apache.activemq:artemis-jms-server:" + version_artemis
    dep_artemisServer = "org.apache.activemq:artemis-server:" + version_artemis
    dep_citrus = "com.consol.citrus:citrus-java-dsl:" + version_citrus
    dep_citrusMail = "com.consol.citrus:citrus-mail:" + version_citrus
    dep_citrusSelenium = "com.consol.citrus:citrus-selenium:" + version_citrus
    dep_disruptor = "com.lmax:disruptor:3.4.2"
    dep_elasticsearchClient = "org.elasticsearch.client:elasticsearch-rest-high-level-client:" + version_elasticsearch
    dep_elasticsearchClientSniffer = "org.elasticsearch.client:elasticsearch-rest-client-sniffer:" + version_elasticsearch
    dep_graaljs = "org.graalvm.js:js:19.3.0.2"
    dep_jacksonDatabind = "com.fasterxml.jackson.core:jackson-databind:2.9.8"
    dep_jms = "javax.jms:javax.jms-api:2.0.1"
    dep_jaxb = "javax.xml.bind:jaxb-api:" + version_jaxb
    dep_jaxbRuntime = "org.glassfish.jaxb:jaxb-runtime:" + version_jaxb
    dep_jsonPath = "com.jayway.jsonpath:json-path:2.4.0"
    dep_kafka = "org.apache.kafka:kafka-clients:2.2.0"
    dep_ldaptive = "org.ldaptive:ldaptive:" + version_ldaptive
    dep_ldaptive_unboundid = "org.ldaptive:ldaptive-unboundid:" + version_ldaptive
    dep_log4jToSlf4j = "org.apache.logging.log4j:log4j-to-slf4j:" + version_log4j
    dep_log4jToLog4j2 = "org.apache.logging.log4j:log4j-1.2-api:" + version_log4j
    dep_mailApi = "com.sun.mail:javax.mail:1.6.2"
    dep_metricsCore = "io.dropwizard.metrics:metrics-core:4.0.5"
    dep_resteasyJaxrs = "org.jboss.resteasy:resteasy-jaxrs:" + version_resteasy
    dep_resteasyJacksonProvider = "org.jboss.resteasy:resteasy-jackson2-provider:" + version_resteasy
    dep_resteasyWadl = "org.jboss.resteasy:resteasy-wadl:" + version_resteasy
    dep_poiOoxml = "org.apache.poi:poi-ooxml:4.1.0"
    dep_saxonHE = "net.sf.saxon:Saxon-HE:9.9.1-2"
    dep_slf4jApi = "org.slf4j:slf4j-api:" + version_slf4j
    dep_slf4jSimple = "org.slf4j:slf4j-simple:" + version_slf4j
    dep_snakeyaml = "org.yaml:snakeyaml:1.24"
    dep_snmp4j = "org.snmp4j:snmp4j:3.1.0"
    dep_undertowServlet = "io.undertow:undertow-servlet:2.0.30.Final"
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    version "4.3.0"
    group "com.jecstar.etm"

    repositories {
        mavenCentral()
        maven {
            url "https://artifacts.elastic.co/maven"
        }
    }

    plugins.withType(JavaPlugin).whenPluginAdded {
        compileJava {
            sourceCompatibility = '11'
            targetCompatibility = '11'
            options.encoding = 'UTF-8'
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            doFirst {
                options.compilerArgs.addAll([
                        '--module-path', classpath.asPath,
                ])
            }
        }

        compileTestJava {
            sourceCompatibility = '11'
            targetCompatibility = '11'
            options.encoding = 'UTF-8'
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }

        dependencies {
            testImplementation 'org.junit.jupiter:junit-jupiter-api:' + version_junit
            testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + version_junit
            testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:' + version_junit
        }

        test {
            useJUnitPlatform()
        }

        sourceSets.whenObjectAdded {
            if ('integrationTest'.equals(it.name)) {
                dependencies {
                    integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api:' + version_junit
                    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + version_junit
                    integrationTestRuntimeOnly 'org.junit.vintage:junit-vintage-engine:' + version_junit
                }

                project.task('integrationTest', type: Test).configure {
                    testClassesDirs = sourceSets.integrationTest.output.classesDirs
                    classpath = sourceSets.integrationTest.runtimeClasspath
                }
                project.integrationTest {
                    useJUnitPlatform()
                }
            }

        }


    }
}